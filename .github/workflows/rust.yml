name: Rust CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - uses: actions/checkout@v4

      # Step 2: Retrieve the cache for Cargo dependencies
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          # Cache key based on Cargo.toml and Cargo.lock files
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Step 3: Retrieve the cache for the target directory
      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      # Step 4: Set environment variable
      - name: Set environment variables
        run: |
          echo "API_URL=${{ secrets.API_URL }}" >> $GITHUB_ENV
          echo "API_PORT=${{ secrets.API_PORT }}" >> $GITHUB_ENV
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "CORS_ALLOWED_URL=${{ secrets.CORS_ALLOWED_URL }}" >> $GITHUB_ENV

      # Step 5: Install SQLx CLI for managing the database
      - name: Install SQLx CLI
        run: cargo install sqlx-cli

      # Step 6: Build the project
      - name: Build
        run: cargo build --release --verbose

      # Step 7: Run database migrations (if needed)
      - name: Run database migrations
        run: |
          sqlx migrate run

      # Step 8: Start the API server in the background
      - name: Run API server in background
        run: |
          cargo run --release &
          echo "Waiting for the API to be ready on port 6988..."
          for i in {1..4}; do
            nc -zv localhost 6988 && echo "API is ready" && break
            echo "Still waiting for API..." && sleep 15
          done

      # Step 9: Run the tests
      - name: Run tests
        run: cargo test --verbose
        env:
          API_URL: http://localhost
          API_PORT: 6988
